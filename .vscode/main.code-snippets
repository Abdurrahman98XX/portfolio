{
	"cacheKey": {
		"scope": "dart",
		"prefix": "cacheKey",
		"body": [
			"static const CacheKeyEntity ${1:Name} = CacheKeyEntity('${1:Name}');",
			""
		]
	},
	"json": {
		"scope": "dart",
		"prefix": "entity",
		"body": [
			"import 'package:json_annotation/json_annotation.dart';",
			"import 'package:portfolio/src/entity/who_entity.dart';",
			"import 'package:portfolio/src/entity/base_entity.dart';",
			"import 'package:portfolio/src/common/json_conversion.dart';",
			"part '${TM_FILENAME_BASE}.g.dart';",
			"",
			"@JsonSerializable(converters: converters)",
			"class ${1:Name}Entity extends BaseEntity {",
			"  const ${1:Name}Entity({",
			"    required this.${2:Prop},",
			"    required super.name,",
			"    required super.id,",
			"    required super.vId,",
			"    required super.who,",
			"    required super.type,",
			"    required super.createdAt,",
			"    required super.modifiedAt,",
			"  });",
			"",
			"  /// ${2:Prop} is $0",
			"  final ${3:Type} ${2:Prop};",
			"",
			"  factory ${1:Name}Entity.fromJson(JsonData json) => _$${1:Name}EntityFromJson(json);",
			"",
			"  @override",
			"  JsonData toJson() => _$${1:Name}EntityToJson(this);",
			"",
			"  @override",
			"  ${1:Name}Entity copyWith({",
			"    String? name,",
			"    String? id,",
			"    String? vId,",
			"    String? type,",
			"    WhoEntity? who,",
			"    ${3:Type}? ${2:Prop},",
			"    DateTime? createdAt,",
			"    DateTime? modifiedAt,",
			"  }) {",
			"    return ${1:Name}Entity(",
			"      id: id ?? this.id,",
			"      who: who ?? this.who,",
			"      vId: vId ?? this.vId,",
			"      name: name ?? this.name,",
			"      type: type ?? this.type,",
			"      ${2:Prop}: ${2:Prop} ?? this.${2:Prop},",
			"      createdAt: createdAt ?? this.createdAt,",
			"      modifiedAt: modifiedAt ?? this.modifiedAt,",
			"    );",
			"  }",
			"",
			"  @override",
			"  List get equality => [${2:Prop}];",
			"}",
		],
		"description": "json data class"
	}
}